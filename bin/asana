#!/bin/env ruby
require 'trollop'
require 'asana'
require 'colorize'

lib = File.expand_path(File.dirname(__FILE__) + '/../lib')
$LOAD_PATH.unshift(lib) if File.directory?(lib) && !$LOAD_PATH.include?(lib)
require 'asana-cli'

parser = Trollop::Parser.new do
  opt :list, "List all workspaces"
  opt :workspace, "Workspace", :type => :string
  opt :project, "Project", :type => :string
  opt :complete, "Complete a task", :type => :integer
  opt :close, "Complete a task", :type => :integer
  opt :create, "Create new task", :type => :string
  opt :message, "Comment on a task", :type => :string
  opt :task, "Task to operate on", :type => :string
  opt :key, "API key to use", :type => :string
  opt :keyfile, "API keyfile to use", :default => "~/.asana_key"
end

opts = Trollop::with_standard_exception_handling parser do
  raise Trollop::HelpNeeded if ARGV.empty? # show help screen
  parser.parse ARGV
end

Asana.configure do |client|
  if opts[:key]
    client.api_key = opts[:key] if opts[:key]
  else
    f = File.expand_path opts[:keyfile]
    if File.exist? f
      config = YAML.load_file f
      client.api_key = config["api_key"]
    else
      Trollop::die "Asana API keyfile \"#{opts[:keyfile]}\" missing"
    end
  end
end

begin
  if opts[:complete] or opts[:close]
    task_id = opts[:complete] || opts[:close] || opts[:task]
    raise Asana::CLIError.new "Task ID required to complete" unless task_id
    Asana::CLI.close task_id
  elsif opts[:message]
    raise Asana::CLIError.new "Task ID required to complete" unless opts[:task]
    Asana::CLI.comment opts[:task], opts[:message]
  elsif opts[:task]
    Asana::CLI.show_task opts[:task], opts[:project], opts[:workspace]
  elsif opts[:project]
    Asana::CLI.project_tasks opts[:project]
  elsif opts[:workspace]
    Asana::CLI.workspace_tasks opts[:workspace]
  elsif opts[:list]
    Asana::CLI.list_workspaces
  end
rescue Asana::CLIError => e
  $stderr.puts e.message.light_red
end